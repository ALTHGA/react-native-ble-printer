import { type EmitterSubscription } from 'react-native';
import type { Align } from './models/align.identify';
import type { Device } from './models/device.identify';
import type { PrintOptions } from './models/print.identify';
export * from './models/align.identify';
export * from './models/device.identify';
declare function bluetoothIsEnabled(): Promise<boolean>;
declare function scanDevices(): Promise<void>;
declare function printStroke(strokeHeight?: number, strokeWidth?: number, strokeDash?: number[]): Promise<void>;
declare function printSpace(spacing: number): Promise<void>;
declare function printText(text: string, options?: PrintOptions): Promise<void>;
declare function printTwoColumns(leftText: string, rightText: string, options?: Omit<PrintOptions, "align">): Promise<void>;
declare function printColumns(texts: string[], columnWidths: number[], alignments: Align[], options?: Omit<PrintOptions, "align">): any;
declare function connect(address: string): Promise<void>;
declare function disconnect(): Promise<void>;
declare function onDeviceFound(callback: (device: Device) => void): EmitterSubscription;
declare function onDevicePaired(callback: (device: Device) => void): EmitterSubscription;
declare function onDiscoveryFinished(callback: (listener: any) => void): EmitterSubscription;
declare const _default: {
    connect: typeof connect;
    bluetoothIsEnabled: typeof bluetoothIsEnabled;
    disconnect: typeof disconnect;
    scanDevices: typeof scanDevices;
    printText: typeof printText;
    printColumns: typeof printColumns;
    printSpace: typeof printSpace;
    printStroke: typeof printStroke;
    printTwoColumns: typeof printTwoColumns;
    onDeviceFound: typeof onDeviceFound;
    onDiscoveryFinished: typeof onDiscoveryFinished;
    onDevicePaired: typeof onDevicePaired;
};
export default _default;
//# sourceMappingURL=index.d.ts.map